apiVersion: kubecontrolplane.config.openshift.io/v1
kind: KubeAPIServerConfig
aggregatorConfig:
  proxyClientInfo:
    certFile: /etc/kubernetes/secrets/apiserver-proxy.crt
    keyFile: /etc/kubernetes/secrets/apiserver-proxy.key
authConfig:
  requestHeader:
    clientCA: /etc/kubernetes/secrets/aggregator-signer.crt
kubeletClientInfo:
  ca: /etc/kubernetes/secrets/kubelet-client-ca-bundle.crt # this is wired to the KCM CSR, which signs serving and client certs for kubelet
  certFile: /etc/kubernetes/secrets/apiserver.crt # origin 3.11: master.kubelet-client.crt
  keyFile: /etc/kubernetes/secrets/apiserver.key # origin 3.11: master.kubelet-client.key
serviceAccountPublicKeyFiles:
- /etc/kubernetes/secrets/service-account.pub # origin 3.11: serviceaccounts.public.key
servingInfo:
  certFile: /etc/kubernetes/secrets/apiserver.crt # origin 3.11: master.server.crt
  clientCA: /etc/kubernetes/secrets/kube-apiserver-complete-client-ca-bundle.crt
  keyFile: /etc/kubernetes/secrets/apiserver.key # origin 3.11: master.server.key
  namedCertificates:
    - names:
      - "kubernetes"
      - "kubernetes.default"
      - "kubernetes.default.svc"
      - "kubernetes.default.svc.cluster.local"
      - "{{.KubernetesServiceIP}}"
      certFile: /etc/kubernetes/secrets/kube-apiserver-service-network-server.crt
      keyFile: /etc/kubernetes/secrets/kube-apiserver-service-network-server.key
    - names:
        - "localhost"
        - "127.0.0.1"
        - "::1"
      certFile: /etc/kubernetes/secrets/kube-apiserver-localhost-server.crt
      keyFile: /etc/kubernetes/secrets/kube-apiserver-localhost-server.key
storageConfig:
  ca: /etc/kubernetes/secrets/{{.EtcdServingCA}} # origin 3.11: ca.crt
  certFile: /etc/kubernetes/secrets/etcd-client.crt # origin 3.11: master.etcd-client.crt
  keyFile: /etc/kubernetes/secrets/etcd-client.key # origin 3.11: master.etcd-client.key
  urls: {{range .EtcdServerURLs}}
  - {{.}}{{end}}
{{if .ServiceCIDR | len | ne 0}}
servicesSubnet: {{index .ServiceCIDR 0}}{{end}}
admission:
  pluginConfig:
    {{if .ServiceCIDR }}
    network.openshift.io/RestrictedEndpointsAdmission:
      configuration:
        apiVersion: network.openshift.io/v1
        kind: RestrictedEndpointsAdmissionConfig
        restrictedCIDRs: {{range .ServiceCIDR}}
        - {{.}}{{end}}{{range .ClusterCIDR}}
        - {{.}}{{end}}
    {{end}}
